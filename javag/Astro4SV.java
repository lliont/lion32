import net.mikekohn.java_grinder.Lionsys;

public class Astro4SV
{
	 static String strMsg = "ASTRO Java Demo by Leon 2018";
	//public static int[] notes = { 492, 392, 392, 392, 492, 392, 392, 392, 523, 523, 492, 492, 440,
	//                                0,  523, 523, 492, 492, 440, 0, 657, 588, 523, 492, 440, 392, 0, 0 };
	//public static int[] dur = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	//                                1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 };
static byte[] sp1_data =  {
//pos0
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0xCC,(byte) 0xCC,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos1
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x77,(byte) 0x44,(byte) 0xCC,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x77,(byte) 0x74,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x74,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF7,(byte) 0x74,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos2
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x74,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x74,(byte) 0x44,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x4C,(byte) 0xCC,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0xCC,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0x74,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x67,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x66,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos3
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x7F,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x77,(byte) 0xFF,
(byte) 0xFF,(byte) 0x66,(byte) 0x74,(byte) 0xCC,(byte) 0xCC,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0x66,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0x47,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0x74,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0x74,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos4
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x44,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x4C,(byte) 0x44,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xCC,(byte) 0x44,(byte) 0x77,(byte) 0x7F,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xCC,(byte) 0x44,(byte) 0x77,(byte) 0x7F,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x4C,(byte) 0x44,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x44,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos5
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0x74,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0x74,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0x47,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x66,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x66,(byte) 0x74,(byte) 0xCC,(byte) 0xCC,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x44,(byte) 0x44,(byte) 0x47,(byte) 0x77,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x7F,
(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos6
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x66,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x67,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0x74,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0xCC,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x4C,(byte) 0xCC,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x74,(byte) 0x44,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x74,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos7
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x66,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF7,(byte) 0x74,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x67,(byte) 0x74,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x77,(byte) 0x74,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0x77,(byte) 0x44,(byte) 0xCC,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos8
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0xCC,(byte) 0xCC,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos9
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x47,(byte) 0x7F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x47,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x47,(byte) 0x77,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xCC,(byte) 0x44,(byte) 0x77,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos10
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x66,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x76,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0x47,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xCC,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0xCC,(byte) 0xC4,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x44,(byte) 0x47,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x47,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos11
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x47,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x47,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x74,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0x66,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0xCC,(byte) 0xCC,(byte) 0x47,(byte) 0x66,(byte) 0xFF,
(byte) 0xFF,(byte) 0x77,(byte) 0x74,(byte) 0x44,(byte) 0x44,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xF7,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos12
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x44,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x44,(byte) 0xC4,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xF7,(byte) 0x77,(byte) 0x44,(byte) 0xCC,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xF7,(byte) 0x77,(byte) 0x44,(byte) 0xCC,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x44,(byte) 0xC4,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x44,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos13
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,
(byte) 0xF7,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0x77,(byte) 0x74,(byte) 0x44,(byte) 0x44,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0xCC,(byte) 0xCC,(byte) 0x47,(byte) 0x66,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x4C,(byte) 0xC4,(byte) 0x7F,(byte) 0x66,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x74,(byte) 0xC4,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x47,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x47,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos14
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x47,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x44,(byte) 0x47,(byte) 0x77,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0xCC,(byte) 0xC4,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xCC,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0x47,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x74,(byte) 0x76,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x77,(byte) 0x66,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x7F,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
//pos15
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte)0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x7F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x47,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x77,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xCC,(byte) 0x44,(byte) 0x77,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x4C,(byte) 0xC4,(byte) 0x47,(byte) 0x77,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x44,(byte) 0x47,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x47,(byte) 0x7F,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0x76,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF7,(byte) 0xFF,(byte) 0x66,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF
};

 static byte[] dot_data =  {
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x1F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x14,(byte) 0x61,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x16,(byte) 0x41,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xF1,(byte) 0x1F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF };
 
 static byte[] rock_data =  {
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0xFF,(byte) 0xF6,(byte) 0x46,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0x64,(byte) 0x66,(byte) 0x64,(byte) 0x46,(byte) 0x66,(byte) 0x46,(byte) 0xFF,
(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x46,(byte) 0xFF,
(byte) 0xFF,(byte) 0x64,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x6F,
(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x46,
(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x6F,
(byte) 0xFF,(byte) 0x64,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x6F,
(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x46,(byte) 0xFF,
(byte) 0x64,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x46,(byte) 0xFF,
(byte) 0x64,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x66,(byte) 0xFF,
(byte) 0xF6,(byte) 0x64,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x66,(byte) 0x44,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0x64,(byte) 0x64,(byte) 0x6F,(byte) 0x64,(byte) 0x46,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xF6,(byte) 0xF6,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,

(byte) 0xFE,(byte) 0xFF,(byte) 0xFE,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,(byte) 0xFF,(byte) 0xFE,
(byte) 0xCF,(byte) 0xF6,(byte) 0xFF,(byte) 0xF6,(byte) 0x46,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0x64,(byte) 0x66,(byte) 0x64,(byte) 0x46,(byte) 0x66,(byte) 0x46,(byte) 0xEC,
(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x46,(byte) 0xFF,
(byte) 0xFF,(byte) 0x64,(byte) 0xC4,(byte) 0x4C,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x6F,
(byte) 0xF6,(byte) 0x4C,(byte) 0x4E,(byte) 0xEC,(byte) 0x44,(byte) 0xCE,(byte) 0xC4,(byte) 0x46,
(byte) 0xF6,(byte) 0x44,(byte) 0x4C,(byte) 0xC4,(byte) 0x44,(byte) 0x4C,(byte) 0x44,(byte) 0x6F,
(byte) 0xFF,(byte) 0x6C,(byte) 0x44,(byte) 0x44,(byte) 0x44,(byte) 0x4C,(byte) 0xE4,(byte) 0x6F,
(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x4C,(byte) 0x4C,(byte) 0x44,(byte) 0xC6,(byte) 0xFF,
(byte) 0x64,(byte) 0x44,(byte) 0xCC,(byte) 0xEC,(byte) 0x44,(byte) 0xCE,(byte) 0x46,(byte) 0xFF,
(byte) 0x64,(byte) 0x44,(byte) 0xEC,(byte) 0xC4,(byte) 0x44,(byte) 0x4E,(byte) 0x46,(byte) 0xEF,
(byte) 0xF6,(byte) 0x64,(byte) 0x44,(byte) 0xC4,(byte) 0xE4,(byte) 0x44,(byte) 0xEF,(byte) 0xFC,
(byte) 0xFF,(byte) 0xF6,(byte) 0x44,(byte) 0x44,(byte) 0x66,(byte) 0x44,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFC,(byte) 0xEF,(byte) 0x64,(byte) 0x64,(byte) 0x6F,(byte) 0x64,(byte) 0x46,(byte) 0xFF,
(byte) 0xFE,(byte) 0xFF,(byte) 0xF6,(byte) 0xF6,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xEF,
(byte) 0xCF,(byte) 0xFE,(byte) 0xFF,(byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,

(byte) 0xFE,(byte) 0xFF,(byte) 0xFE,(byte) 0xFF,(byte) 0x6F,(byte) 0xFE,(byte) 0xFE,(byte) 0xFF,
(byte) 0xCF,(byte) 0xFF,(byte) 0xEF,(byte) 0xF6,(byte) 0x46,(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,
(byte) 0xFF,(byte) 0x6F,(byte) 0xFF,(byte) 0xF4,(byte) 0xF6,(byte) 0x6F,(byte) 0x46,(byte) 0xFC,
(byte) 0xF6,(byte) 0x4F,(byte) 0x44,(byte) 0xC4,(byte) 0x4F,(byte) 0xC4,(byte) 0x46,(byte) 0xFE,
(byte) 0xEF,(byte) 0x64,(byte) 0xC4,(byte) 0xFC,(byte) 0xFF,(byte) 0x4F,(byte) 0x44,(byte) 0x6F,
(byte) 0xF6,(byte) 0x4C,(byte) 0x4F,(byte) 0xEF,(byte) 0xF4,(byte) 0xCE,(byte) 0xC4,(byte) 0x46,
(byte) 0xC6,(byte) 0xFC,(byte) 0xFF,(byte) 0xFF,(byte) 0x4F,(byte) 0x4E,(byte) 0x44,(byte) 0xFF,
(byte) 0xFF,(byte) 0x6C,(byte) 0xFF,(byte) 0xFF,(byte) 0xFF,(byte) 0x4C,(byte) 0xE4,(byte) 0x6E,
(byte) 0xF6,(byte) 0xFE,(byte) 0xFF,(byte) 0xFF,(byte) 0xFC,(byte) 0x4F,(byte) 0xCF,(byte) 0xFC,
(byte) 0xF4,(byte) 0xFF,(byte) 0xCC,(byte) 0xFC,(byte) 0xF4,(byte) 0xFF,(byte) 0x46,(byte) 0xFF,
(byte) 0x64,(byte) 0xF4,(byte) 0xEF,(byte) 0xCF,(byte) 0xFF,(byte) 0x4E,(byte) 0x4F,(byte) 0xEF,
(byte) 0xF6,(byte) 0xF4,(byte) 0xE4,(byte) 0xF4,(byte) 0xEF,(byte) 0x4C,(byte) 0xEE,(byte) 0xFC,
(byte) 0xFF,(byte) 0xF6,(byte) 0x4F,(byte) 0x4F,(byte) 0xF6,(byte) 0x4F,(byte) 0x6F,(byte) 0xEF,
(byte) 0xFC,(byte) 0xEF,(byte) 0x64,(byte) 0x64,(byte) 0x6F,(byte) 0x64,(byte) 0xF6,(byte) 0xFE,
(byte) 0xFE,(byte) 0xFF,(byte) 0xF6,(byte) 0xF6,(byte) 0xFF,(byte) 0xF6,(byte) 0x6F,(byte) 0xEF,
(byte) 0xFF,(byte) 0xFE,(byte) 0xFC,(byte) 0xFC,(byte) 0xFE,(byte) 0xFE,(byte) 0xFC,(byte) 0xFF
 };



 static int RAND=197, buffer=0, bt=0, i, hit, level, score, hiscore;

static float[] cost = { 1f, 0.9238f, 0.7071f, 0.3827f, 0f, -0.3827f, -0.7071f, -0.9238f, -1f, -0.9238f, -0.7071f, -0.3827f,
						 0, 0.3827f, 0.7071f, 0.9238f, 1f};
 static float[] sint = { 0f, 0.3827f, 0.7071f, 0.9238f, 1f, 0.9238f, 0.7071f, 0.3827f, 0f, -0.3827f, -0.7071f, -0.9238f,
						 -1f, -0.9238f, -0.7071f, -0.3827f, 0f };

 static void draw_ship(int brigtness, int x, int y, int angle)
	{	int  x1,y1;
		y=199-y; 
		x=(int) (x*256f/320f);
		//brigtness=brigtness+(x%2)<<11;
		angle=16-angle;
		x1=(int ) ((-4)*cost[angle]-(-5)*sint[angle]);
		y1=(int ) ((-4)*sint[angle]+(-5)*cost[angle]);
		Lionsys.out(28672,0);
		Lionsys.out(28674,(x+x1)*256+ y+y1);
		Lionsys.out(28676,brigtness);
		x1=(int ) (cost[angle]-(6)*sint[angle]);
		y1=(int ) (sint[angle]+(6)*cost[angle]);
		Lionsys.out(28678,(x+x1)* 256 + (y+y1));
		Lionsys.out(28680,brigtness);
		x1=(int ) ((4)*cost[angle]-(-5)*sint[angle]);
		y1=(int ) ((4)*sint[angle]+(-5)*cost[angle]);
		Lionsys.out(28682,(x+x1)*256 + y+y1);
		Lionsys.out(28684,brigtness);
		x1=(int ) ((-4)*cost[angle]-(-5)*sint[angle]);
		y1=(int ) ((-4)*sint[angle]+(-5)*cost[angle]);
		Lionsys.out(28686,(x+x1)*256 + y+y1);
		Lionsys.out(28688,0);
	}
	
 static void draw_bullet(int brigtness, int b, int x, int y)
	{
		y=199-y;
		x=(int) (x*256f/320f);
		//brigtness=brigtness+(x%2)<<11;
		Lionsys.out(28688+10*b,0);
		Lionsys.out(28690+10*b,x*256 + y);
		Lionsys.out(28692+10*b,brigtness);
		Lionsys.out(28694+10*b,x*256 + y);
		Lionsys.out(28696+10*b,0);
		/* Lionsys.out(28688,brigtness);
		Lionsys.out(28690,(x+4)<<8 + (y+8));
		Lionsys.out(28692,brigtness);
		Lionsys.out(28694,(x+7)<<8 + y); */
	}
 
 static void draw_rock(int brigtness, int r, int x, int y, int angle)
	{
		int  x1,y1;
		y=199-y;
		x=(int) (x*256f/320f);
		//brigtness=brigtness+(x%2)<<11;
		angle=16-angle;
		x1=(int ) ((-6)*cost[angle]-(-7)*sint[angle]);
		y1=(int ) ((-6)*sint[angle]+(-7)*cost[angle]);
		Lionsys.out(28700+r*24,0);
		Lionsys.out(28702+r*24,(x+x1)*256 + (y+y1));
		Lionsys.out(28704+r*24,brigtness);
		x1=(int ) ((-4)*cost[angle]-(6)*sint[angle]);
		y1=(int ) ((-4)*sint[angle]+(6)*cost[angle]);
		Lionsys.out(28706+r*24,(x+x1)*256 + (y+y1));
		Lionsys.out(28708+r*24,brigtness);
		x1=(int ) ((5)*cost[angle]-(9)*sint[angle]);
		y1=(int ) ((5)*sint[angle]+(9)*cost[angle]);
		Lionsys.out(28710+r*24,(x+x1)*256 + (y+y1));
		Lionsys.out(28712+r*24,brigtness);
		x1=(int ) ((7)*cost[angle]-(-5)*sint[angle]);
		y1=(int ) ((7)*sint[angle]+(-5)*cost[angle]);
		Lionsys.out(28714+r*24,(x+x1)*256 + (y+y1));
		Lionsys.out(28716+r*24,brigtness);
		x1=(int ) ((2)*cost[angle]-(-1)*sint[angle]);
		y1=(int ) ((2)*sint[angle]+(-1)*cost[angle]);
		Lionsys.out(28718+r*24,(x+x1)*256 + (y+y1));
		Lionsys.out(28720+r*24,brigtness);
		x1=(int ) ((-6)*cost[angle]-(-7)*sint[angle]);
		y1=(int ) ((-6)*sint[angle]+(-7)*cost[angle]);
		Lionsys.out(28722+r*24,(x+x1)*256 + (y+y1));
		Lionsys.out(28724+r*24,0);
	}



 static void set_sprite( int s, int buf, int en, int x, int y, int bank)
	{
		Lionsys.out(16384+bank*4096+256*buf+s*8,x); //Lionsys.outb(16384+bank*4096+1+256*buf+s*8,x%256);
		Lionsys.out(16384+bank*4096+2+256*buf+s*8,y); //Lionsys.outb(16384+bank*4096+3+256*buf+s*8,y);
		Lionsys.out(16384+bank*4096+6+256*buf+s*8,en); //Lionsys.outb(16384+bank*4096+7+256*buf+s*8,en);
	}
	
	static void kill_sprite( int s, int bank)
	{
		Lionsys.out(16384+bank*4096+6+256+s*8,0);
		Lionsys.out(16384+bank*4096+6+s*8,0);
	}
	
	static float sx,sy; 
	static float sdx,sdy;
	static float distx,disty;
	static float fdistx,fdisty;
	static float bx,by,bdx,bdy,brange;
	static float[] rockx = new float[24];
	static float[] rocky = new float[24];
	static float[] rockdx = new float[24];
	static float[] rockdy = new float[24];
	static int[] rockangle = new int[24];
	static int[] rockon = new int[24];

	static void init( int level)
	{
		int ii;
		for (ii=0; ii<24; ii++)
		{ 	rockon[ii]=1; rockangle[ii]=Lionsys.rnd(16)-1;
			rockx[ii]=(float) (20+Lionsys.rnd(260));
			rocky[ii]=(float) (10+Lionsys.rnd(170));
			if (ii<8) rockdx[ii]=(float) (Lionsys.rnd(1+level/2)/5f); else rockdx[ii]=(float) -(Lionsys.rnd(1+level/2)/5f);
			if (ii<16) rockdy[ii]=(float) (Lionsys.rnd(1+level/2)/5f); else rockdy[ii]=(float) -(Lionsys.rnd(1+level/2)/5f);
			if (ii<8) set_sprite(2+ii,0,1,(int) rockx[ii],(int) rocky[ii],0);
			  else if (ii<16) set_sprite(ii-6,0,1,(int) rockx[ii],(int) rocky[ii],1);
			  else    set_sprite(ii-14,0,1,(int) rockx[ii],(int) rocky[ii],2);
			draw_rock(60,ii,(int) rockx[ii],(int) rocky[ii],rockon[ii]);
		}
	}

	static void main()
	{
		int snd= 0; int j,s,t,ti,frame1;
		int key=0; int ji,delay,col=0x0000,wd,jf;
		hiscore=1; int scroll=0;
		int sb=70;
		//Lionsys.out(24,1);
		while ((key!='Q') && (key!='q'))
		{
			level=1; score=0; hit=0;
			Lionsys.screen( 0, 3);
			Lionsys.cls();
			Lionsys.print_str(1,10,strMsg);
			Lionsys.print_str(1,42,"L:  6");
			Lionsys.print_str(1,1,"S: 0");
			brange=0;
			for (j=0; j<128; j++)  {
				Lionsys.outb(16896+j,sp1_data[j]);
				Lionsys.outb(16896+1*128+j,dot_data[j]);
				for (i=0; i<10; i++)
				{
					Lionsys.outb(16896+(2+i)*128+j,rock_data[j]);
				}
				for (i=0; i<10; i++)
				{
					Lionsys.outb((20480+512)+i*128+j,rock_data[j] | 0x11);
				}
				for (i=0; i<10; i++)
				{
					Lionsys.outb((20480+4096+512)+i*128+j,rock_data[j] | 0x22);
				}
				Lionsys.outb(16896+(13)*128+j,rock_data[j+128]);
				Lionsys.outb(16896+(14)*128+j,rock_data[j+256]);
			}
			set_sprite(0,0,1,100,60,0);
			set_sprite(1,0,0,100,60,0);
			init(level);
			t=Lionsys.timer();
			sx=155f; sy=100f; sdx=0; sdy=0; ti=0; hit=0; jf=0;
			frame1=0; buffer=0; Lionsys.out(20,buffer); ji=0; int jb=0;
			for (i=0; i<120; i++) { Lionsys.screen( 0,Lionsys.rnd(7)); Lionsys.plot(30+Lionsys.rnd(260),20+Lionsys.rnd(160),1); }
			Lionsys.screen( 0, 3);
			delay=300; int change;
			while ((hit<6) && (key!='q') && (key!='Q')) {
				char k =(char) key; 
				change=0;
				jb=0;
				if (delay>1) change=1;
				if (k=='C' || (((Lionsys.joy1() & 16) !=0) && (ji>4)) ) { jb=1; frame1= (frame1+1)%16; change=1; }
				if (k=='D' || (((Lionsys.joy1() & 8) !=0) && (ji>4)) ) { jb=1; if (frame1<=0) frame1=15; else frame1= frame1-1; change=1; }
				if (k=='A' || (((Lionsys.joy1() & 4) !=0) && (ji>4)) ) { jb=1;
					if (frame1==0) {             sdy-=0.2f;  } else
					if (frame1==1) { sdx+=0.05f; sdy-=0.15f; } else
					if (frame1==2) { sdx+=0.1f;  sdy-=0.1f;  } else
					if (frame1==3) { sdx+=0.15f; sdy-=0.05f; } else
					if (frame1==4) { sdx+=0.2f;              } else
					if (frame1==5) { sdx+=0.15f; sdy+=0.05f; } else
					if (frame1==6) { sdx+=0.1f;  sdy+=0.1f;  } else
					if (frame1==7) { sdx+=0.05f; sdy+=0.15f; } else
					if (frame1==8) {             sdy+=0.2f;  } else
					if (frame1==9) { sdx-=0.05f; sdy+=0.15f; } else
					if (frame1==10) { sdx-=0.1f;  sdy+=0.1f;  } else
					if (frame1==11) { sdx-=0.15f; sdy+=0.05f; } else
					if (frame1==12) { sdx-=0.2f;              } else
					if (frame1==13) { sdx-=0.15f; sdy-=0.05f; } else
					if (frame1==14) { sdx-=0.1f;  sdy-=0.1f;  } else
					if (frame1==15) { sdx-=0.05f; sdy-=0.15f;}
					if ((sdx*sdx+sdy*sdy)<2) {sdx=sdx*1.15f; sdy=sdy*1.15f;}
					Lionsys.out(13,20000); // noise bw
					Lionsys.out(11,1); Lionsys.out(28,180); Lionsys.sound(0,60,5);
				}
				if (((k==' ') || ((Lionsys.joy1() & 1) !=0)) && (jf>16)) { jf=0;
					Lionsys.out(13,30000); // noise bw
					Lionsys.out(11,1); Lionsys.out(28,200); Lionsys.sound(0,1360,4);
					bx= sx; by= sy; brange=200f;
					if (frame1==0) { bdx=0; bdy=-6;} else
					if (frame1==1) { bdx=2; bdy=-4;} else
					if (frame1==2) { bdx=3; bdy=-3;} else
					if (frame1==3) { bdx=4; bdy=-2;} else
					if (frame1==4) { bdx=6; bdy=0;} else
					if (frame1==5) { bdx=4; bdy=2;} else
					if (frame1==6) { bdx=3; bdy=3;} else
					if (frame1==7) { bdx=2; bdy=4;} else

					if (frame1==8) { bdx=0; bdy=6;} else
					if (frame1==9) { bdx=-2; bdy=4;} else
					if (frame1==10) { bdx=-3; bdy=3;} else
					if (frame1==11) { bdx=-4; bdy=2;} else
					if (frame1==12) { bdx=-6; bdy=0;} else
					if (frame1==13) { bdx=-4; bdy=-2;} else
					if (frame1==14) { bdx=-3; bdy=-3;} else
					if (frame1==15) { bdx=-2; bdy=-4;}
					bdx+=sdx/4; bdy+=sdy/4;
				}
				//if (((Lionsys.joy1() & 4) !=0) && (ji>28)) { delay=60; jb=1;}
				if (jb==1) {ji=0; jb=0; }
				if (change==1) for (j=0; j<128; j+=2) { 
						Lionsys.out(16896+j,(sp1_data[j+frame1*128]*256+sp1_data[1+j+frame1*128]) | col); }
				ti=(Lionsys.timer()-t);
				if (ti<0) ti=(-ti);
				if (ti>15)
				{   Lionsys.out(20,buffer*2);
					if (buffer==0) buffer=1; else buffer=0;
					if (sdx*sdx>0.0000001f) sdx=sdx*0.986f; 
					if (sdy*sdy>0.0000001f) sdy=sdy*0.986f;
					scroll = (scroll + 1) % 4;
					if (scroll==0) {
						if (sdx>0.05f) Lionsys.hscroll(20,163,30,131,-1);
						if (sdx<-0.05f) Lionsys.hscroll(20,163,30,131,1);
						if (sdy>0.05f) Lionsys.vscroll(20,163,30,131,1);
						if (sdy<-0.05f) Lionsys.vscroll(20,163,30,131,-1);
					}
					if (ji<30) ji+=1;  if (jf<30) jf+=1;
					t=Lionsys.timer();
					if (delay<20) col=0x0000; else col=0x1111;
					set_sprite(0,buffer,1,(int) sx, (int ) sy,0);
					draw_ship(sb,(int) sx,(int) sy,frame1);
					for (i=0; i<24; i++) {
						if (rockon[i]==1)
						{
							if (rockx[i]+rockdx[i]<=11f) rockx[i]=304f; else if (rockx[i]+rockdx[i]>=304f) rockx[i]=11f;
							rockx[i]+=rockdx[i];
							if (rocky[i]+rockdy[i]<=11f) rocky[i]=188f; else if (rocky[i]+rockdy[i]>=188f) rocky[i]=11f;
							rocky[i]+=rockdy[i];
							if (i<8) set_sprite(2+i,buffer,1,(int) rockx[i],(int) rocky[i],0); 
								else if (i<16) set_sprite(i-6,buffer,1,(int) rockx[i],(int) rocky[i],1);
								else set_sprite(i-14,buffer,1,(int) rockx[i],(int) rocky[i],2);
							draw_rock(60,i,(int) rockx[i],(int) rocky[i],rockangle[i]);
						} else { draw_rock(0,i,(int) rockx[i],(int) rocky[i],rockangle[i]);
								if (i<8) { kill_sprite(2+i,0);} 
								else if (i<16) { kill_sprite(i-6,1);}
								else { kill_sprite(i-14,2); }
								}
						if (rockon[i]<-7) { 
							rockon[i]+=1; set_sprite(13,buffer,1,(int) rockx[i],(int) rocky[i],0); 
						} 
						else if (rockon[i]<-1) { 
							rockon[i]+=1; set_sprite(14,buffer,1,(int) rockx[i],(int) rocky[i],0); kill_sprite(13,0);
						}
						if (rockon[i]==-1) { 
							rockon[i]+=1; kill_sprite(14,0); 
						}
					}
					if (brange>0) 
					{ 	brange-= 6f;
						
						if (bx+bdx<11f) bx=304f; else if (bx+bdx>304f) bx=11f;
						bx+=bdx;
						if (by+bdy<11f) by=188f; else if (by+bdy>188f) by=11f; 
						by+=bdy;
						set_sprite(1,buffer,1,(int) bx,(int) by,0);
						draw_bullet(80,0,(int) bx,(int) by);
						for (i=0; i<24; i++) {
							if (rockon[i]==1)
							{
								fdistx= (bx-rockx[i]); fdisty= (by-rocky[i]);
								if ((fdistx*fdistx+fdisty*fdisty)<10f*10f) {
									Lionsys.out(13,18000); // noise bw
									Lionsys.out(11,1); Lionsys.out(28,250); Lionsys.sound(0,80,5);
									rockon[i]=-15; score+=level;
									fdistx= (sx-rockx[i])/5f; fdisty= (sy-rocky[i])/5f;
									if ((fdistx*fdistx+fdisty*fdisty)>400f) score+=1;
									brange=0; Lionsys.print_num(1,5,score);
								}
							}
						}
					} else {set_sprite(1,0,0,0,0,0); set_sprite(1,1,0,0,0,0); brange=0; 
							draw_bullet(0,0,(int) bx,(int) by); }
					int lfin=1;
					for (i=0; i<24; i++) if (rockon[i]==1) lfin=0;
					if (lfin==1) { level+=1; init(level); delay=250;}
					if (sx+sdx>=304f) sx=11f; else if (sx+sdx<=11f) sx=304f;
					sx+=sdx;
					if (sy+sdy>=188f) sy=11f; else if (sy+sdy<=11f) sy=188f;
					sy+=sdy;
					if (delay==0) for (i=0; i<24; i++) {
						if (rockon[i]==1)
						{ fdistx= ( sx-rockx[i]); fdisty= ( sy-rocky[i]);
						if ((fdistx*fdistx+fdisty*fdisty)<13f*13f) {
							Lionsys.out(11,1);	Lionsys.out(13,4000); Lionsys.out(28,255);
							for (int fr=0; fr<8*8; fr++) {
								Lionsys.sound(1,1500+80*fr,4);
								for (j=0; j<128; j+=2) { 
									Lionsys.out(16896+j,sp1_data[j+(fr%16)*128]*256+sp1_data[1+j+(fr%16)*128]); }
								set_sprite(0,0,1,(int) sx, (int ) sy,0);
								set_sprite(0,1,1,(int) sx, (int ) sy,0);
							}
							hit+=1; Lionsys.print_num(1,46,6-hit);
							delay=250;
							sx=155f; sy=100f;
							sdx=0;sdy=0;
						}
						}
					} else { delay-=1; }
					}
					key=Lionsys.inkey();
						
					}  
					key=0;
					Lionsys.print_str(10,18,"*** GAME OVER ***");
					Lionsys.print_str(12,12,"PRESS ENTER TO PLAY AGAIN");
					if (score>hiscore) {
						Lionsys.print_str(16,17,"!!! NEW HIGH SCORE !!!");
						hiscore=score;
					}
					Lionsys.print_str(14,18,"HI SCORE: "); Lionsys.print_num(14,28,hiscore);
					while ((key!='Q') && (key!='q') && (key!=13))
					{
						key=Lionsys.inkey();
					}
				}
				Lionsys.out(11,0);
			}
		}


		//     if (Lionsys.isplaying(0)==0)
		//	  {
		//		Lionsys.sound(0,notes[snd],dur[snd]);
		//		snd+= 1;
		//		if (snd>=28) snd=0;
		//	  }